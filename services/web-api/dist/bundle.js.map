{"version":3,"sources":["webpack:///webpack/bootstrap eb4a9daa3dd297bbab3c","webpack:///./src/index.js","webpack:///external \"babel-polyfill\"","webpack:///./src/app.js","webpack:///external \"express\"","webpack:///external \"body-parser\"","webpack:///external \"http\"","webpack:///./src/config/environment/index.js","webpack:///external \"path\"","webpack:///external \"lodash\"","webpack:///./src/config/express.js","webpack:///external \"morgan\"","webpack:///external \"cookie-parser\"","webpack:///./src/routes.js"],"names":["process","env","NODE_ENV","onStart","server","seedDB","console","log","seed","startServer","start","app","createServer","Promise","resolve","listen","port","ip","development","production","requiredProcessEnv","name","Error","all","root","normalize","__dirname","PORT","IP","serverURL","DOMAIN","PGHOST","PG_HOST","secrets","node_env","merge","use","urlencoded","limit","extended","json","get","_","res","send","route","req","status","error"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap eb4a9daa3dd297bbab3c","import 'babel-polyfill'\n\nimport { default as app, onStart, server } from './app'\n\n// Set default node environment to development\nprocess.env.NODE_ENV = process.env.NODE_ENV || 'development'\n\n// Export the application\nexport default app\nexport { onStart, server }\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"babel-polyfill\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-polyfill\"\n// module id = 1\n// module chunks = 0","import express from 'express'\nimport bodyParser from 'body-parser'\nimport http from 'http'\nimport config from './config/environment'\nimport expressConfig from './config/express'\nimport routes from './routes'\n\nlet app = express()\nlet server = http.createServer(app)\nexpress(app)\nexpressConfig(app)\nroutes(app)\n\n// Start the server\nfunction startServer() {\n  return new Promise((resolve) => {\n    server.listen(config.port, config.ip, function() {\n      console.log('Express server listening on %d', config.port)\n      resolve()\n    })\n  })\n}\n\nasync function start(){\n  if (config.seedDB){\n    console.log(\"Seeding!\")\n    await seed()\n  }\n  await startServer()\n}\n\nlet onStart = start()\n\n// Expose app\nexport default app\nexport {\n  onStart, server\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app.js","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"http\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"http\"\n// module id = 5\n// module chunks = 0","import path from 'path'\nimport _ from 'lodash'\n//import production from './production.js'\n//import development from './development.js'\nlet development = {}\nlet production = {}\n\nfunction requiredProcessEnv(name) {\n  if (!process.env[name]) {\n    throw new Error('You must set the ' + name + ' environment variable')\n  }\n  return process.env[name]\n}\n\n// All configurations will extend these options\n// ============================================\nvar all = {\n  env: process.env.NODE_ENV,\n\n  // Root path of server\n  root: path.normalize(__dirname + '/../..'),\n\n  // Server port\n  port: process.env.PORT || 3001,\n\n  // Server IP\n  ip: process.env.IP || '0.0.0.0',\n\n  // Server base e.g. http://malik.ml.rpi.edu:3001\n  serverURL: process.env.DOMAIN,\n\n  // Grab environment variable for postgresql host\n  PGHOST : process.env.PG_HOST || 'localhost',\n\n  // Secret for session\n  secrets: {\n  },\n\n}\n\nvar node_env = process.env.NODE_ENV == 'production' ? production : development\n\n// Export the config object based on the NODE_ENV\n// ==============================================\nexport default  _.merge(\n  all,\n  node_env || {}\n)\n\n\n\n// WEBPACK FOOTER //\n// ./src/config/environment/index.js","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"lodash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 8\n// module chunks = 0","import morgan from 'morgan'\nimport bodyParser from 'body-parser'\nimport cookieParser from 'cookie-parser'\n\nexport default function(app) {\n  app.use(bodyParser.urlencoded({ limit: '5mb', extended: false }))\n  app.use(bodyParser.json({ limit: '5mb' }))\n  app.use(morgan('dev'))\n  app.use(cookieParser())\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/config/express.js","module.exports = require(\"morgan\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"morgan\"\n// module id = 10\n// module chunks = 0","module.exports = require(\"cookie-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cookie-parser\"\n// module id = 11\n// module chunks = 0","export default function(app) {\n  app.get('/', (_,res) => res.send('telebum server api'))\n\n  app.route('/*')\n    .get((req, res) => {\n      res.status(404).json({ error: 'Invalid route' })\n    })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes.js"],"sourceRoot":""}